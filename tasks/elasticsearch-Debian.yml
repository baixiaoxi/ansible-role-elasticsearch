---

- name: set fact force_install to no
  set_fact: force_install=no

- name: set fact force_install to yes
  set_fact: force_install=yes
  when: es_allow_downgrades

# 清理之前安装的版本
- name: Gracefully stop and remove elasticsearch package
  become: yes
  block:
  - name: Check if the elasticsearch package is installed
    shell: "dpkg-query -W -f'${Status}' {{ es_package_name }}"
    register: elasticsearch_package_install
    failed_when: False
    changed_when: False
    check_mode: no

  - name: unhold elasticsearch package when switching to a different package type
    become: yes
    dpkg_selections:
      name: "{{ es_package_name }}"
      selection: "install"
    when: elasticsearch_package_install.stdout == 'install ok installed'

  # 停止服务
  - name: stop elasticsearch
    service:
      name: '{{ es_package_name }}'
      state: stopped
    when: elasticsearch_package_install.stdout == 'install ok installed'

  # 卸载安装包
  - name: Debian - Remove elasticsearch package if we are switching to a different package type
    apt:
      name: '{{ es_package_name }}'
      state: absent
      purge: "{{ 'yes' if ((purge is defined) and (purge | bool)) else 'no'}}"
    when: elasticsearch_package_install.stdout == 'install ok installed'

  # 清理配置文件
  - name: Debian - Remove datas
    file:
      path: "{{ item }}"
      state: absent
    when: (purge is defined) and (purge | bool)
    with_items:
      - "{{ es_conf_dir }}"
      - "{{ es_log_dir }}"
      - "{{ es_data_dirs }}"
      - "{{ es_pid_dir }}"
      - "{{ es_home }}"

# 安装elasticsearch仓库
- name: Install Elasticsearch repository
  when: es_use_repository
  become: yes
  block:
  - name: Debian - Install apt-transport-https to support https APT downloads
    apt:
      name: apt-transport-https
      state: present

  - name: "Check if elasticsearch-keyring exists"
    stat:
      path: "/usr/share/keyrings/elasticsearch-keyring.gpg"
    register: elasticsearch_gpg

  # Add elasticsearch PSK
  - name: Add elasticsearch public signing key
    shell: "wget -qO - {{ es_apt_key }} | sudo gpg --dearmor -o /usr/share/keyrings/elasticsearch-keyring.gpg"
    when: es_add_repository and not elasticsearch_gpg.stat.exists

  # Add elasticsearch repo definitions
  - name: Add elasticsearch repo definitions
    apt_repository:
      repo: "deb [signed-by=/usr/share/keyrings/elasticsearch-keyring.gpg] {{ elastic_repo }} stable main"
      state: present
    when: es_add_repository

# 创建elasticsearch用户和分组
- name: Include optional user and group creation.
  when: (es_user_id is defined) and (es_group_id is defined)
  include: elasticsearch-optional-user.yml

- name: Debian - Get installed elasticsearch version
  command: dpkg-query --showformat='${Version}' --show {{ es_package_name }}
  register: installed_es_version
  failed_when: False
  changed_when: False
  check_mode: no

- name: Debian - unhold elasticsearch version
  become: yes
  dpkg_selections:
    name: "{{ es_package_name }}"
    selection: "install"
  when: not es_version_lock or (installed_es_version.stdout and installed_es_version.stdout != es_version)

# 安装elasticsearch
- name: Debian - Ensure elasticsearch is installed
  become: yes
  apt:
    name: '{{ es_package_name }}{% if es_version is defined and es_version != "" %}={{ es_version }}{% endif %}'
    state: present
    force: '{{ force_install }}'
    allow_unauthenticated: "{{ 'no' if es_apt_key else 'yes' }}"
    cache_valid_time: 86400
  when: es_use_repository
  register: debian_elasticsearch_install_from_repo
  notify: restart elasticsearch
  environment:
    ES_PATH_CONF: "{{ es_conf_dir }}"

# 获取首次安装时，显示的elastic用户秘钥
- name: Get elastic's password
  when: debian_elasticsearch_install_from_repo.changed and debian_elasticsearch_install_from_repo.stdout is defined
  set_fact:
    elastic_init_password: "{{ debian_elasticsearch_install_from_repo.stdout | regex_search('The generated password for the elastic built-in superuser is : (.+)', '\\1') | default([''], true) | first }}"

# - name: download elasticsearch's initial password
#   when: elastic_init_password is defined and elastic_init_password != ""
#   copy:
#     content: "{{ elastic_init_password }}"
#     dest: "{{ elk_certs_dir }}/{{ ansible_hostname }}_init_password.txt"
#   delegate_to: localhost

- name: Debian - hold elasticsearch version
  become: yes
  dpkg_selections:
    name: "{{ es_package_name }}"
    selection: "hold"
  when: es_version_lock

# workaround due to https://github.com/ansible/ansible/issues/66977
- set_fact:
    es_deb_url: "{% if es_version is version('7.0.0', '>=') %}{{ es_package_url }}-{{ es_version }}-amd64.deb{% else %}{{ es_package_url }}-{{ es_version }}.deb{% endif %}"

# 安装elasticsearch
- name: Debian - Install Elasticsearch from url
  become: yes
  apt:
    deb: "{% if es_custom_package_url is defined %}{{ es_custom_package_url }}{% else %}{{ es_deb_url }}{% endif %}"
    state: present
  when: not es_use_repository
  register: elasticsearch_install_from_package
  notify: restart elasticsearch
  environment:
    ES_PATH_CONF: "{{ es_conf_dir }}"
